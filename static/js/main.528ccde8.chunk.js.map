{"version":3,"sources":["components/App/App.styles.tsx","context/google-maps.context.tsx","context/api.context.tsx","context/active-location.context.tsx","context/filter.context.tsx","context/filtered-locations.context.tsx","context/index.tsx","components/SearchForm/SearchForm.styles.tsx","components/SearchForm/SearchForm.component.tsx","utils/use-debounce.util.tsx","components/LocationsListItem/LocationsListItem.styles.tsx","components/LocationsListItem/LocationsListItem.component.tsx","components/LocationsList/LocationsList.styles.tsx","components/LocationsList/LocationsList.component.tsx","components/Map/Map.styles.tsx","components/Map/Map.component.tsx","components/App/App.component.tsx","reportWebVitals.ts","index.tsx"],"names":["StoreFinderContainer","styled","div","GoogleMapsContext","createContext","GoogleMapsProvider","children","useState","loaded","setLoaded","useEffect","Loader","apiKey","process","version","mapIds","load","then","Provider","value","APIContext","undefined","APIProvider","state","setState","a","fetch","response","json","data","loadData","error","console","ActiveLocationContext","ActiveLocationProvider","activeLocation","setActiveLocation","countryReducer","type","payload","tagReducer","termReducer","FilterContext","FilterProvider","useReducer","term","dispatchTerm","tag","dispatchTag","country","dispatchCountry","useContext","reset","useCallback","action","dispatch","indexOf","FilteredLocationsContext","FilteredLocationsProvider","locations","filters","filteredLocations","setFilteredLocations","filterLocations","input","filter","item","tags","includes","name","address","description","CombinedProviders","FormEle","form","BtnWrapEle","BtnEle","button","props","LabelEle","label","LabelTextEle","span","inputSharedStyles","InputTextEle","SelectEle","select","SearchForm","inputValue","setInputValue","selectedTag","setSelectedTag","selectedCountry","setSelectedCountry","debouncedInputValue","timeout","handler","setTimeout","clearTimeout","useDebounce","countries","filterContext","onSubmit","event","preventDefault","className","placeholder","onChange","target","disabled","length","map","index","id","onClick","_","LocationEle","article","LocationBtnWrapEle","LocationBtnEle","active","LocationTitleEle","h1","LocationDetailsEle","LocationAddressEle","LocationDetailsPartEle","LocationDetailsTitleEle","h2","TagsEle","TagEle","LocationsListItem","location","setActive","isActive","apiContext","mappedTags","find","stopPropagation","LocationsListWrapEle","ul","LocationsListEle","LocationsListItemEle","li","bringToTop","LocationsList","locationListRef","useRef","current","scrollTo","top","behavior","ref","MapContainer","Map","googleMapsContext","setMap","markers","setMarkers","mapRef","google","maps","mapId","center","lat","lng","zoom","zoomControl","forEach","marker","newMarkers","Marker","position","bounds","LatLngBounds","getPosition","extend","fitBounds","setZoom","Math","min","getZoom","panTo","addListener","e","clearInstanceListeners","findIndex","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.528ccde8.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StoreFinderContainer = styled.div`\n    gap: 1em 0;\n    width: 100%;\n    display: block;\n    @media screen and (min-width: 900px) {\n        display:grid;\n        grid-template-rows: auto 1fr;\n        grid-template-columns: 3fr 5fr;\n        height: 100vh;\n    }\n`;","import { createContext, useEffect, useState } from \"react\";\n\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\nimport { FunctionComponent } from \"react-dom/node_modules/@types/react\";\n\ninterface MapsContext {\n    loaded: boolean;\n}\n\nexport const GoogleMapsContext = createContext<MapsContext | null>(null);\n\nexport const GoogleMapsProvider: FunctionComponent<{}> = ({ children }) => {\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        // If already loaded do nothing\n        if (loaded) {\n            return;\n        }\n        const additionalOptions = {\n            mapIds: [(process.env.REACT_APP_MAP_ID || '')]\n        };\n        const loader = new Loader({\n            apiKey: process.env.REACT_APP_GOOGLE_MAPS_API || '',\n            version: \"beta\",\n            ...additionalOptions,\n        });\n        loader.load().then(() => {\n            setLoaded(true);\n        });\n    }, [loaded, setLoaded]);\n\n    return <GoogleMapsContext.Provider value={{ loaded }}>\n        {children}\n    </GoogleMapsContext.Provider>;\n}","import { createContext, FunctionComponent, useEffect, useState } from \"react\";\n\nexport interface APILocation {\n    description: string;\n    name: string;\n    id: string;\n    lat: number;\n    lng: number;\n    address: string;\n    tags?: string[];\n    country: string;\n}\n\nexport interface APITag {\n    id: string;\n    name: string;\n}\n\nexport interface APICountry {\n    id: string;\n    name: string;\n}\n\nexport interface APIContextType {\n    locations: APILocation[];\n    tags: APITag[];\n    countries: APICountry[];\n}\n\nexport const APIContext = createContext<APIContextType | undefined>(undefined);\n\nexport const APIProvider: FunctionComponent<{}> = ({ children }) => {\n\n    const [state, setState] = useState<APIContextType>();\n\n    useEffect(() => {\n        async function loadData() {\n            const response = await fetch('./api_mock/locations.json');\n            const data = await response.json();\n            setState(data);\n        }\n        try {\n            loadData();\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setState]);\n\n    return <APIContext.Provider value={state}>\n        {children}\n    </APIContext.Provider>\n}","import React, { createContext, FunctionComponent, useState } from \"react\";\n\ninterface ActiveLocationContextType {\n    activeLocation: string | undefined;\n    setActiveLocation: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport const ActiveLocationContext = createContext<ActiveLocationContextType | undefined>(undefined);\n\nexport const ActiveLocationProvider: FunctionComponent<{}> = ({ children }) => {\n    const [activeLocation, setActiveLocation] = useState<string | undefined>(undefined);\n    return <ActiveLocationContext.Provider value={{ activeLocation, setActiveLocation }}>{children}</ActiveLocationContext.Provider>\n}\n","import { FunctionComponent, createContext, useReducer, useCallback, useContext } from \"react\";\nimport { ActiveLocationContext } from \"./active-location.context\";\n\nconst countryInitial = 'gbr';\ninterface CountryAction {\n    type: 'COUNTRY_SET' | 'RESET';\n    payload: string;\n}\nconst countryReducer = (state: string, { type, payload }: CountryAction): string => {\n    switch (type) {\n        case 'COUNTRY_SET':\n            return payload;\n        case 'RESET':\n            return countryInitial;\n        default:\n            return state;\n    }\n}\n\nconst tagInitial = '';\ninterface TagAction {\n    type: 'TAG_SET' | 'RESET';\n    payload: string;\n}\nconst tagReducer = (state: string, { type, payload }: TagAction): string => {\n    switch (type) {\n        case 'TAG_SET':\n            return payload;\n        case 'RESET':\n            return tagInitial;\n        default:\n            return state;\n    }\n}\n\nconst termInitial = '';\ninterface TermAction {\n    type: 'TERM_SET' | 'RESET';\n    payload: string;\n}\nconst termReducer = (state: string, { type, payload }: TermAction): string => {\n    switch (type) {\n        case 'TERM_SET':\n            return payload;\n        case 'RESET':\n            return termInitial;\n        default:\n            return state;\n    }\n}\n\nexport interface FilterStateType {\n    term: string;\n    country: string;\n    tag: string;\n}\n\nexport interface FilterContextType {\n    state: FilterStateType;\n    dispatch: (action: TagAction | TermAction | CountryAction) => void;\n}\n\nexport const FilterContext = createContext<FilterContextType | undefined>(undefined);\n\nexport const FilterProvider: FunctionComponent = ({ children }) => {\n\n    const [term, dispatchTerm] = useReducer(termReducer, termInitial);\n    const [tag, dispatchTag] = useReducer(tagReducer, tagInitial);\n    const [country, dispatchCountry] = useReducer(countryReducer, countryInitial);\n\n    const state = { term, tag, country };\n\n    const { setActiveLocation } = useContext(ActiveLocationContext) || {};\n\n    const reset = useCallback(() => {\n        const action = {\n            type: 'RESET',\n            payload: '',\n        }\n        dispatchTerm(action as TermAction);\n        dispatchTag(action as TagAction);\n        dispatchCountry(action as CountryAction);\n        setActiveLocation && setActiveLocation(undefined);\n    }, [\n        dispatchTerm,\n        dispatchTag,\n        dispatchCountry,\n        setActiveLocation\n    ]);\n\n    const dispatch = useCallback(\n        (action: TermAction | TagAction | CountryAction) => {\n            if (action.type === 'RESET') {\n                reset();\n            } else if (action.type.indexOf('TERM') > -1) {\n                dispatchTerm(action as TermAction);\n            } else if (action.type.indexOf('TAG') > -1) {\n                dispatchTag(action as TagAction);\n            } else if (action.type.indexOf('COUNTRY') > -1) {\n                dispatchCountry(action as CountryAction);\n            }\n        }, [reset]);\n\n    return <FilterContext.Provider value={{ state, dispatch }}>\n        {children}\n    </FilterContext.Provider>;\n}","import { createContext, FunctionComponent, useContext, useEffect, useCallback, useState } from \"react\";\nimport { ActiveLocationContext } from \"./active-location.context\";\nimport { APIContext, APILocation } from './api.context';\nimport { FilterContext } from './filter.context';\n\nexport const FilteredLocationsContext = createContext<APILocation[] | undefined>(undefined);\n\nexport const FilteredLocationsProvider: FunctionComponent<{}> = ({ children }) => {\n\n    const { locations } = useContext(APIContext) || { locations: [] };\n    const filters = useContext(FilterContext);\n    const { setActiveLocation } = useContext(ActiveLocationContext) || {};\n\n    const [filteredLocations, setFilteredLocations] = useState<APILocation[]>(locations);\n\n    const filterLocations = useCallback<(input: APILocation[]) => APILocation[]>(\n        (input) => {\n\n            setActiveLocation && setActiveLocation(undefined);\n\n            if (!filters) {\n                return input;\n            }\n\n            const { tag, country, term } = filters.state;\n\n            let filterFunction = (item: APILocation): boolean => {\n                if (tag && !item.tags?.includes(tag)) {\n                    return false;\n                };\n                if (country && item.country !== country) {\n                    return false;\n                };\n                if (\n                    term &&\n                    item.name.indexOf(term) === -1 &&\n                    item.address.indexOf(term) === -1 &&\n                    item.description.indexOf(term) === -1\n                ) {\n                    return false;\n                }\n                return true;\n            }\n\n            return input.filter(filterFunction);\n        },\n        [filters, setActiveLocation],\n    );\n\n    useEffect(() => {\n        setFilteredLocations(\n            filterLocations(locations)\n        );\n    }, [locations, filterLocations]);\n\n    return <FilteredLocationsContext.Provider value={ filteredLocations }>\n        {children}\n    </FilteredLocationsContext.Provider>\n}","import { FunctionComponent } from 'react';\n\nimport { GoogleMapsProvider } from './google-maps.context';\nimport { APIProvider } from './api.context';\nimport { FilteredLocationsProvider } from './filtered-locations.context';\nimport { ActiveLocationProvider } from './active-location.context';\nimport { FilterProvider } from './filter.context';\n\nexport const CombinedProviders: FunctionComponent<{}> = ({ children }) => {\n    return <GoogleMapsProvider>\n        <APIProvider>\n            <FilterProvider>\n                <FilteredLocationsProvider>\n                    <ActiveLocationProvider>\n                        {children}\n                    </ActiveLocationProvider>\n                </FilteredLocationsProvider>\n            </FilterProvider>\n        </APIProvider>\n    </GoogleMapsProvider>;\n}\n\nexport * from './google-maps.context';\nexport * from './active-location.context';\nexport * from './api.context';\nexport * from './filtered-locations.context';\nexport * from './filter.context';","import styled from 'styled-components';\n\nexport const FormEle = styled.form`\n    display: block;\n    width: 80%;\n    margin: auto;\n`;\n\nexport const BtnWrapEle = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: flex-start;\n    gap: .5em;\n    margin: .75em 0 0;\n`;\n\nexport const BtnEle = styled.button<{ type: string }>`\n    flex: 0 1 auto;\n    background: none;\n    color: #d59563;\n    font-size: 60%;\n    border: 2px solid #d59563;\n    border-radius: 6px;\n    padding: 0.25em .5em;\n    cursor: pointer;\n    &:hover, &:focus {\n        border-color: #d59563;\n        background-color: #d59563;\n        color: #333;\n    }\n\n    ${props => props?.type === 'reset' && `\n        color: #ff7043;\n        border-color: #ff7043;\n        &:hover, &:focus {\n            border-color: #ff7043;\n            background-color: #ff7043;\n            color: #333;\n        }\n    `}\n    \n    ${props => props?.type === 'submit' && `\n        border-color: #d59563;\n        background-color: #d59563;\n        color: #333;\n        &:hover, &:focus {\n            border-color: #fff;\n            background-color: #fff;\n        }\n    `}\n`;\n\nexport const LabelEle = styled.label`\n    display: flex;\n    align-items: baseline;\n    flex: 1 1 auto;\n    gap: .5em;\n    margin: .5em 0;\n    input, select {\n        flex: 1 1 auto;\n        width: 100%;\n    }\n`;\n\nexport const LabelTextEle = styled.span`\n    display: block;\n    font-size: 75%;\n    flex: 0 0 80px;\n    text-align: right;\n`;\n\n\nconst inputSharedStyles = `\n    line-height: inherit;\n    color: #fff;\n    background: transparent;\n    display: block;\n    border: none;\n    cursor: pointer;\n`\n\nexport const InputTextEle = styled.input`\n    ${inputSharedStyles}\n    border-bottom: 1px solid #d59563;\n`;\n\n\nexport const SelectEle = styled.select`\n    ${inputSharedStyles}\n    border-bottom: 1px solid #d59563;\n\n    option {\n        color: inherit;\n        background: #444;\n    }\n`;","import { useState, FunctionComponent, SyntheticEvent, ChangeEvent, useContext, useEffect } from 'react';\nimport { APIContext, FilterContext } from '../../context';\n\nimport { useDebounce } from '../../utils/use-debounce.util';\n\nimport { FormEle, LabelEle, LabelTextEle, SelectEle, InputTextEle, BtnEle, BtnWrapEle } from './SearchForm.styles';\n\nexport const SearchForm: FunctionComponent<{}> = () => {\n\n    const [inputValue, setInputValue] = useState('');\n    const [selectedTag, setSelectedTag] = useState('');\n    const [selectedCountry, setSelectedCountry] = useState('gbr');\n\n    const debouncedInputValue = useDebounce(inputValue, 250);\n\n    const { tags, countries } = useContext(APIContext) || {};\n    const filterContext = useContext(FilterContext);\n\n    const handleTermChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleTagChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        setSelectedTag(event.target.value);\n    };\n\n    const handleCountryChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        setSelectedCountry(event.target.value);\n    };\n\n    const handleSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\n        event.preventDefault();\n    };\n\n    const handleReset = (_: SyntheticEvent<HTMLButtonElement>) => {\n        setInputValue('');\n        setSelectedTag('');\n        setSelectedCountry('gbr');\n        filterContext?.dispatch({\n            type: 'RESET',\n            payload: ''\n        });\n    }\n\n    useEffect(() => {\n        filterContext?.dispatch({\n            type: 'TERM_SET',\n            payload: debouncedInputValue\n        });\n    }, [debouncedInputValue, filterContext]);\n\n    useEffect(() => {\n        filterContext?.dispatch({\n            type: 'TAG_SET',\n            payload: selectedTag\n        });\n    }, [selectedTag, filterContext]);\n\n    useEffect(() => {\n        filterContext?.dispatch({\n            type: 'COUNTRY_SET',\n            payload: selectedCountry\n        });\n    }, [selectedCountry, filterContext]);\n\n    return (\n        <FormEle onSubmit={handleSubmit}>\n            <LabelEle>\n                <LabelTextEle\n                    className=\"label-text\"\n                >\n                    Search:\n                </LabelTextEle>\n                <InputTextEle\n                    type=\"text\"\n                    name=\"search-term\"\n                    placeholder=\"Term to search\"\n                    value={inputValue}\n                    onChange={handleTermChange}\n                />\n            </LabelEle>\n\n            <LabelEle>\n                <LabelTextEle\n                    className=\"label-text\"\n                >\n                    Category:\n                </LabelTextEle>\n                <SelectEle\n                    name=\"tag\"\n                    onChange={handleTagChange}\n                    value={selectedTag}\n                    disabled={!tags || tags.length < 1}\n                >\n                    <option>Please select:</option>\n                    {tags?.map((tag, index) => <option key={index} value={tag.id}>{tag.name}</option>)}\n                </SelectEle>\n            </LabelEle>\n\n            <LabelEle>\n                <LabelTextEle\n                    className=\"label-text\"\n                >\n                    Country:\n                </LabelTextEle>\n                <SelectEle\n                    name=\"tag\"\n                    onChange={handleCountryChange}\n                    value={selectedCountry}\n                >\n                    {countries?.map((country, index) => <option key={index} value={country.id}>{country.name}</option>)}\n                </SelectEle>\n            </LabelEle>\n\n            <BtnWrapEle>\n                <BtnEle type=\"reset\" onClick={handleReset}>Reset</BtnEle>\n            </BtnWrapEle>\n        </FormEle>\n    )\n}","import { useState, useEffect } from 'react';\n\nexport const useDebounce = (value: any, timeout: number) => {\n    const [state, setState] = useState(value);\n\n    useEffect(() => {\n        const handler = setTimeout(() => {\n            setState(value);\n        }, timeout);\n\n        return () => {\n            clearTimeout(handler);\n        }\n    }, [value, timeout]);\n\n    return state;\n}","import styled from 'styled-components';\n\nexport const LocationEle = styled.article`\n    cursor: pointer;\n`;\n\nexport const LocationBtnWrapEle = styled.div`\n    display: flex;\n`;\n\nexport const LocationBtnEle = styled.button<{ active?: boolean }>`\n    display: block;\n    height: 1.5rem;\n    width: 1.5rem;\n    background: none;\n    border: none;\n    position: relative;\n    color: inherit;\n    cursor: pointer;\n    &:hover, &:focus{\n        color: #f2f2f2;\n    }\n    &::after{\n        content: '';\n        display: block;\n        width: 100%;\n        height: 2px;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        transform-origin: 0 0;\n    }\n    &::before{\n        content: '';\n        display: block;\n        width: 40%;\n        height: 40%;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        border-right: 2px solid currentColor;\n        border-bottom: 2px solid currentColor;\n        transform: translate(-50%, -50%) rotate(-45deg);\n    }\n\n    ${props => props.active &&\n        `\n        &::before{\n            background: #ff7043;\n            transform-origin: 0 0;\n            transform: translate(6px, 4px) rotate(45deg);\n            height: 2px;\n            width: 100%;\n            border: 0;\n            top: 0;\n            left: 0;\n        }\n        &::after{\n            background: #ff7043;\n            transform-origin: 100% 0;\n            transform: translate(-6px, 4px) rotate(-45deg);\n            height: 2px;\n            top: 0;\n            left: 0;\n        }\n        `\n    }\n`;\n\nexport const LocationTitleEle = styled.h1`\n    display: block;\n    width: 100%;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 100%;\n    margin: 0 ;\n`;\n\nexport const LocationDetailsEle = styled.div`\n    cursor: default;\n    display: flex;\n    align-items: flex-start;\n    font-size: 75%;\n    gap: .5em;\n    margin-top: 1em;\n`;\n\nexport const LocationAddressEle = styled.address`\n    white-space: pre;\n`;\n\nexport const LocationDetailsPartEle = styled.div`\n    display: block;\n    flex: 1 1 50%;    \n    color: #fff;\n`;\n\nexport const LocationDetailsTitleEle = styled.h2`\n    font-size: calc(12 / 18 * 100%);\n    text-transform: uppercase;\n    font-weight: 400;\n    margin: 0 0 0.25em;\n    text-decoration: underline;\n`;\n\nexport const TagsEle = styled.div`\n    display: flex;\n    gap: 0.25em;\n`;\n\nexport const TagEle = styled.span`\n    font-size: 50%;\n    border-radius: 2px;\n    border: 1px solid currentColor;\n    padding: 0.2em 0.5em;\n    font-weight: 400;\n`;","import { FunctionComponent, useContext } from 'react';\nimport { APIContext, APILocation } from '../../context';\n\nimport { LocationBtnWrapEle, LocationBtnEle, LocationEle, LocationTitleEle, LocationDetailsEle, LocationAddressEle, LocationDetailsPartEle, LocationDetailsTitleEle, TagsEle, TagEle } from './LocationsListItem.styles';\n\ninterface LocationsListItemProps {\n    location: APILocation;\n    setActive: () => void;\n    isActive: boolean;\n}\nexport const LocationsListItem: FunctionComponent<LocationsListItemProps> = ({ location, setActive, isActive }) => {\n\n    const apiContext = useContext(APIContext);\n\n    const { name, description, address, tags } = location;\n\n    const mappedTags = tags && apiContext?.tags && tags?.map((tag) => apiContext.tags.find(item => item.id === tag)?.name);\n\n    return (\n        <LocationEle onClick={setActive}>\n            <LocationBtnWrapEle>\n                <LocationTitleEle>{name}</LocationTitleEle>\n                <LocationBtnEle active={isActive}></LocationBtnEle>\n            </LocationBtnWrapEle>\n            { mappedTags && mappedTags.length > 0 &&\n                <TagsEle>\n                    {mappedTags.map((tag, index) => <TagEle key={index}>{tag}</TagEle>)}\n                </TagsEle>\n            }\n            {isActive &&\n                <LocationDetailsEle onClick={event => event.stopPropagation()}>\n                    <LocationDetailsPartEle>\n                        <LocationDetailsTitleEle>Description</LocationDetailsTitleEle>\n                        {description}\n                    </LocationDetailsPartEle>\n                    {address && address !== 'redacted' &&\n                        <LocationDetailsPartEle>\n                            <LocationDetailsTitleEle>Address</LocationDetailsTitleEle>\n                            <LocationAddressEle>{address}</LocationAddressEle>\n                        </LocationDetailsPartEle>\n                    }\n                </LocationDetailsEle>}\n        </LocationEle>\n    );\n}","import styled from 'styled-components';\n\nexport const LocationsListWrapEle = styled.ul`\n    overflow-y: auto;\n    padding: 0;\n    margin: 0;\n    border-top: .2em solid #38414e;\n`;\n\nexport const LocationsListEle = styled.ul`\n    list-style: none;\n    padding: 0;\n    display: flex;\n    flex-direction: column;\n`;\n\nexport const LocationsListItemEle = styled.li<{ bringToTop: boolean }>`\n    display: block;\n    margin: 1em 0;\n    padding: 0 .5em 0 .3em;\n    flex: 0 0 auto;\n    padding: 0 .5em 0 .3em;\n    ${(props) =>\n        props.bringToTop ?\n            `\n            order: 1;\n            border: 1px solid currentColor;\n            padding: .2em .5em 1em .3em;\n            ` :\n            `order: 2;`\n    }\n    border-left: .2em solid currentColor;\n`;\n","import { FunctionComponent, useContext, useEffect, useRef } from 'react';\nimport { ActiveLocationContext, APILocation, FilteredLocationsContext } from '../../context';\nimport { LocationsListItem } from '../LocationsListItem';\n\nimport { LocationsListWrapEle, LocationsListItemEle, LocationsListEle } from './LocationsList.styles';\n\nexport const LocationsList: FunctionComponent<{}> = () => {\n    const locationListRef = useRef<HTMLUListElement>(null);\n    const filteredLocations = useContext(FilteredLocationsContext) || [];\n    const { activeLocation, setActiveLocation } = useContext(ActiveLocationContext) || {};\n\n    const setActive = (active: string) => {\n        if (!active || !setActiveLocation) {\n            return;\n        }\n        setActiveLocation(active === activeLocation ? undefined : active);\n    }\n\n    useEffect(() => {\n        if (!locationListRef.current) {\n            return;\n        }\n        locationListRef.current.scrollTo({ top: 0, behavior: 'smooth' });\n    }, [locationListRef, activeLocation])\n\n    return (\n        <LocationsListWrapEle ref={locationListRef}>\n            <LocationsListEle>\n                {filteredLocations?.map((location: APILocation) => {\n                    const isActive = location.id === activeLocation;\n                    return (\n                        <LocationsListItemEle\n                            bringToTop={isActive}\n                            key={location.id}\n                        >\n                            <LocationsListItem\n                                isActive={isActive}\n                                setActive={() => setActive(location.id)}\n                                location={location}\n                            />\n                        </LocationsListItemEle>\n                    );\n                })}\n            </LocationsListEle>\n        </LocationsListWrapEle>\n    )\n}","import styled from 'styled-components';\n\nexport const MapContainer = styled.div`\n    display: block;\n    height calc(100vw * (2 / 3));\n    margin: 1em 0 0;\n    @media screen and (min-width: 900px) {\n        margin: 0;\n        height: 100%;\n        grid-row: 1 / 3;\n        grid-column: 2;\n    }\n`;","import { FunctionComponent, useState, useRef, useEffect, useContext } from \"react\";\nimport { GoogleMapsContext, FilteredLocationsContext } from \"../../context\";\nimport { ActiveLocationContext } from \"../../context\";\n\nimport { MapContainer } from './Map.styles';\n\nexport const Map: FunctionComponent<{}> = () => {\n\n    const googleMapsContext = useContext(GoogleMapsContext);\n    const filteredLocations = useContext(FilteredLocationsContext);\n\n    const { activeLocation, setActiveLocation } = useContext(ActiveLocationContext) || {};\n\n    const [map, setMap] = useState<google.maps.Map | undefined>(undefined);\n    const [markers, setMarkers] = useState<google.maps.Marker[] | undefined>(undefined);\n\n    const mapRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!mapRef.current || !googleMapsContext?.loaded) {\n            return;\n        }\n        setMap(new google.maps.Map(mapRef.current, {\n            mapId: process.env.REACT_APP_MAP_ID,\n            center: { lat: -33, lng: 151 },\n            zoom: 8,\n            zoomControl: false,\n        } as google.maps.MapOptions));\n    }, [googleMapsContext, mapRef, setMap])\n\n    useEffect(() => {\n        if (!map) {\n            return;\n        }\n        if (markers && filteredLocations && markers.length === filteredLocations.length) {\n            return;\n        }\n\n        markers?.forEach(marker => {\n            marker.setMap(null);\n        });\n\n        const newMarkers = filteredLocations?.map((location) => {\n            const { lat, lng } = location;\n            return new google.maps.Marker({\n                position: {\n                    lat, lng\n                },\n                map,\n            });\n        });\n\n        setMarkers(newMarkers);\n    }, [map, filteredLocations, setMarkers, markers]);\n\n\n    useEffect(() => {\n        if (!markers || !map || !setActiveLocation || !filteredLocations) {\n            return\n        }\n\n        const bounds = new google.maps.LatLngBounds();\n\n        if (markers?.length > 0) {\n            markers.forEach(marker => {\n                const position = marker.getPosition();\n                if (!position) {\n                    return;\n                }\n                bounds.extend(position);\n            });\n            map.fitBounds(bounds);\n            map.setZoom(Math.min(map.getZoom() - 1, 15));\n        } else {\n            map.setZoom(8);\n            map.panTo({\n                lat: 51.51403184993422,\n                lng: -0.1270110922311092\n            });\n        }\n\n        markers.forEach((marker, index) => {\n            marker.addListener('click', (e) => {\n                setActiveLocation && \n                filteredLocations[index] && \n                setActiveLocation(filteredLocations[index].id);\n            })\n        });\n\n        return () => {\n            markers?.forEach((marker) => {\n                google.maps.event.clearInstanceListeners(marker);\n            });\n        };\n    }, [map, markers, filteredLocations, setActiveLocation]);\n\n\n    useEffect(() => {\n        if (!filteredLocations || !map || typeof activeLocation === 'undefined' || !markers) {\n            return;\n        }\n\n        const index = filteredLocations.findIndex(location => location.id === activeLocation);\n\n        if (typeof index === 'undefined') {\n            return;\n        }\n\n        const marker = markers[index];\n        if (!marker) {\n            return;\n        }\n        const position = marker.getPosition() as google.maps.LatLng;\n\n        if (position) {\n            map.panTo(position);\n            if (map.getZoom() < 12) {\n                map.setZoom(12)\n            }\n        }\n\n    }, [map, activeLocation, markers, filteredLocations]);\n\n    return <MapContainer ref={mapRef} />;\n}\n\n","import { FunctionComponent } from 'react';\nimport { StoreFinderContainer } from './App.styles';\n\nimport { SearchForm } from '../SearchForm';\nimport { LocationsList } from '../LocationsList';\nimport { Map } from '../Map';\n\nimport { CombinedProviders } from '../../context';\n\nexport const App: FunctionComponent<unknown> = () => {\n  return (\n    <div id=\"store-finder-app\">\n      <CombinedProviders>\n        <StoreFinderContainer>\n          <SearchForm />\n          <Map />\n          <LocationsList />\n        </StoreFinderContainer>\n      </CombinedProviders>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}