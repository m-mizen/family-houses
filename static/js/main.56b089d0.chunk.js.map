{"version":3,"sources":["components/App/App.styles.tsx","context/google-maps.context.tsx","context/api.context.tsx","context/api-locations-filter.context.tsx","context/active-location.context.tsx","context/index.tsx","components/SearchForm/SearchForm.styles.tsx","components/SearchForm/SearchForm.component.tsx","components/LocationsListItem/LocationsListItem.styles.tsx","components/LocationsListItem/LocationsListItem.component.tsx","components/LocationsList/LocationsList.styles.tsx","components/LocationsList/LocationsList.component.tsx","components/Map/Map.styles.tsx","components/Map/Map.component.tsx","components/App/App.component.tsx","reportWebVitals.ts","index.tsx"],"names":["StoreFinderContainer","styled","div","GoogleMapsContext","createContext","GoogleMapsProvider","children","useState","loaded","setLoaded","useEffect","Loader","apiKey","process","version","mapIds","load","then","Provider","value","APIContext","undefined","APIProvider","state","setState","a","fetch","response","json","data","loadData","error","console","LocationsFilteredContext","LocationsFilteredProvider","locations","useContext","filteredLocations","setFilteredLocations","filter","loc","country","ActiveLocationContext","ActiveLocationProvider","activeLocation","setActiveLocation","CombinedProviders","FormEle","form","BtnWrapEle","BtnEle","button","props","type","LabelEle","label","LabelTextEle","span","inputSharedStyles","InputTextEle","input","SelectEle","select","SearchForm","inputValue","setInputValue","selectedTag","setSelectedTag","selectedCountry","setSelectedCountry","apiContext","locationsFilteredContext","activeLocationContext","tags","countries","onSubmit","event","preventDefault","item","includes","name","indexOf","address","description","className","placeholder","onChange","target","disabled","length","map","tag","index","id","onClick","e","LocationEle","article","LocationBtnWrapEle","LocationBtnEle","active","LocationTitleEle","h1","LocationDetailsEle","LocationAddressEle","LocationDetailsPartEle","LocationDetailsTitleEle","h2","TagsEle","TagEle","LocationsListItem","location","setActive","isActive","mappedTags","find","stopPropagation","LocationsListWrapEle","ul","LocationsListEle","LocationsListItemEle","li","LocationsList","MapContainer","Map","googleMapsContext","setMap","markers","setMarkers","mapRef","useRef","current","google","maps","mapId","center","lat","lng","zoom","zoomControl","forEach","marker","newMarkers","Marker","position","bounds","LatLngBounds","getPosition","extend","fitBounds","setZoom","Math","min","getZoom","panTo","addListener","log","clearInstanceListeners","findIndex","ref","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.56b089d0.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const StoreFinderContainer = styled.div`\n    gap: 1em 0;\n    width: 100%;\n    display: block;\n    @media screen and (min-width: 900px) {\n        display:grid;\n        grid-template-rows: auto 1fr;\n        grid-template-columns: 3fr 5fr;\n        height: 100vh;\n    }\n`;","import { createContext, useEffect, useState } from \"react\";\n\nimport { Loader } from \"@googlemaps/js-api-loader\";\n\nimport { FunctionComponent } from \"react-dom/node_modules/@types/react\";\n\ninterface MapsContext {\n    loaded: boolean;\n}\n\nexport const GoogleMapsContext = createContext<MapsContext | null>(null);\n\nexport const GoogleMapsProvider: FunctionComponent<{}> = ({ children }) => {\n    const [loaded, setLoaded] = useState(false);\n\n    useEffect(() => {\n        // If already loaded do nothing\n        if (loaded) {\n            return;\n        }\n        const additionalOptions = {\n            mapIds: [(process.env.REACT_APP_MAP_ID || '')]\n        };\n        const loader = new Loader({\n            apiKey: process.env.REACT_APP_GOOGLE_MAPS_API || '',\n            version: \"beta\",\n            ...additionalOptions,\n        });\n        loader.load().then(() => {\n            setLoaded(true);\n        });\n    }, [loaded, setLoaded]);\n\n    return <GoogleMapsContext.Provider value={{ loaded }}>\n        {children}\n    </GoogleMapsContext.Provider>;\n}","import { createContext, FunctionComponent, useEffect, useState } from \"react\";\n\nexport interface APILocation {\n    description: string;\n    name: string;\n    id: string;\n    lat: number;\n    lng: number;\n    address: string;\n    tags?: string[];\n    country: string;\n}\n\nexport interface APITag {\n    id: string;\n    name: string;\n}\n\nexport interface APICountry {\n    id: string;\n    name: string;\n}\n\nexport interface APIContextType {\n    locations: APILocation[];\n    tags: APITag[];\n    countries: APICountry[];\n}\n\nexport const APIContext = createContext<APIContextType | undefined>(undefined);\n\nexport const APIProvider: FunctionComponent<{}> = ({ children }) => {\n\n    const [state, setState] = useState<APIContextType>();\n\n    useEffect(() => {\n        async function loadData() {\n            const response = await fetch('./api_mock/locations.json');\n            const data = await response.json();\n            setState(data);\n        }\n        try {\n            loadData();\n        } catch (error) {\n            console.error(error);\n        }\n    }, [setState]);\n\n    return <APIContext.Provider value={state}>\n        {children}\n    </APIContext.Provider>\n}","import { createContext, FunctionComponent, useContext, useEffect, useState } from \"react\";\nimport { APIContext, APILocation } from './api.context';\n\nexport interface APILocationsFilter {\n    filteredLocations: APILocation[];\n    setFilteredLocations: (filteredLocations: APILocation[]) => void;\n}\n\nexport const LocationsFilteredContext = createContext<APILocationsFilter | undefined>(undefined);\n\nexport const LocationsFilteredProvider: FunctionComponent<{}> = ({ children }) => {\n\n    const { locations } = useContext(APIContext) || { locations: [] };\n    const [filteredLocations, setFilteredLocations] = useState<APILocation[]>(locations);\n\n    useEffect(() => {\n        setFilteredLocations(locations.filter(loc => loc.country === 'gbr'));\n    }, [locations, setFilteredLocations]);\n\n    return <LocationsFilteredContext.Provider value={{ filteredLocations, setFilteredLocations }}>\n        {children}\n    </LocationsFilteredContext.Provider>\n}","import React, { createContext, FunctionComponent, useState } from \"react\";\n\ninterface ActiveLocationContextType {\n    activeLocation: string | undefined;\n    setActiveLocation: React.Dispatch<React.SetStateAction<string | undefined>>;\n}\n\nexport const ActiveLocationContext = createContext<ActiveLocationContextType | undefined>(undefined);\n\nexport const ActiveLocationProvider: FunctionComponent<{}> = ({ children }) => {\n    const [activeLocation, setActiveLocation] = useState<string | undefined>(undefined);\n    return <ActiveLocationContext.Provider value={{ activeLocation, setActiveLocation }}>{children}</ActiveLocationContext.Provider>\n}\n","import { FunctionComponent } from 'react';\n\nimport { GoogleMapsProvider } from './google-maps.context';\nimport { APIProvider } from './api.context';\nimport { LocationsFilteredProvider } from './api-locations-filter.context';\nimport { ActiveLocationProvider } from './active-location.context';\n\nexport const CombinedProviders: FunctionComponent<{}> = ({ children }) => {\n    return <GoogleMapsProvider>\n        <APIProvider>\n            <ActiveLocationProvider>\n                <LocationsFilteredProvider>\n                    {children}\n                </LocationsFilteredProvider>\n            </ActiveLocationProvider>\n        </APIProvider>\n    </GoogleMapsProvider>;\n}\n\nexport * from './google-maps.context';\nexport * from './active-location.context';\nexport * from './api.context';\nexport * from './api-locations-filter.context';","import styled from 'styled-components';\n\nexport const FormEle = styled.form`\n    display: block;\n    width: 80%;\n    margin: auto;\n`;\n\nexport const BtnWrapEle = styled.div`\n    display: flex;\n    flex-direction: row-reverse;\n    justify-content: flex-start;\n    gap: .5em;\n    margin: .75em 0 0;\n`;\n\nexport const BtnEle = styled.button<{ type: string }>`\n    flex: 0 1 auto;\n    background: none;\n    color: #d59563;\n    font-size: 60%;\n    border: 2px solid #d59563;\n    border-radius: 6px;\n    padding: 0.25em .5em;\n    cursor: pointer;\n    &:hover, &:focus {\n        border-color: #d59563;\n        background-color: #d59563;\n        color: #333;\n    }\n\n    ${props => props?.type === 'reset' && `\n        color: #ff7043;\n        border-color: #ff7043;\n        &:hover, &:focus {\n            border-color: #ff7043;\n            background-color: #ff7043;\n            color: #333;\n        }\n    `}\n    \n    ${props => props?.type === 'submit' && `\n        border-color: #d59563;\n        background-color: #d59563;\n        color: #333;\n        &:hover, &:focus {\n            border-color: #fff;\n            background-color: #fff;\n        }\n    `}\n`;\n\nexport const LabelEle = styled.label`\n    display: flex;\n    align-items: baseline;\n    flex: 1 1 auto;\n    gap: .5em;\n    margin: .5em 0;\n    input, select {\n        flex: 1 1 auto;\n        width: 100%;\n    }\n`;\n\nexport const LabelTextEle = styled.span`\n    display: block;\n    font-size: 75%;\n    flex: 0 0 80px;\n    text-align: right;\n`;\n\n\nconst inputSharedStyles = `\n    line-height: inherit;\n    color: #fff;\n    background: transparent;\n    display: block;\n    border: none;\n    cursor: pointer;\n`\n\nexport const InputTextEle = styled.input`\n    ${inputSharedStyles}\n    border-bottom: 1px solid #d59563;\n`;\n\n\nexport const SelectEle = styled.select`\n    ${inputSharedStyles}\n    border-bottom: 1px solid #d59563;\n\n    option {\n        color: inherit;\n        background: #444;\n    }\n`;","import { useState, FunctionComponent, SyntheticEvent, ChangeEvent, useContext } from 'react';\nimport { ActiveLocationContext, APIContext, APILocation, LocationsFilteredContext } from '../../context';\n\nimport { FormEle, LabelEle, LabelTextEle, SelectEle, InputTextEle, BtnEle, BtnWrapEle } from './SearchForm.styles';\n\nexport const SearchForm: FunctionComponent<{}> = () => {\n\n    const [inputValue, setInputValue] = useState('');\n    const [selectedTag, setSelectedTag] = useState('');\n    const [selectedCountry, setSelectedCountry] = useState('gbr');\n\n    const apiContext = useContext(APIContext);\n    const locationsFilteredContext = useContext(LocationsFilteredContext);\n    const activeLocationContext = useContext(ActiveLocationContext);\n\n    const { tags, countries } = useContext(APIContext) || {};\n\n    const handleTermChange = (event: ChangeEvent<HTMLInputElement>) => {\n        setInputValue(event.target.value);\n    };\n\n    const handleTagChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        setSelectedTag(event.target.value);\n    };\n\n    const handleCountryChange = (event: ChangeEvent<HTMLSelectElement>) => {\n        setSelectedCountry(event.target.value);\n    };\n\n    const handleSubmit = (event: SyntheticEvent<HTMLFormElement>) => {\n        event.preventDefault();\n\n        if (!selectedTag && !inputValue) {\n            locationsFilteredContext?.setFilteredLocations(apiContext?.locations || []);\n        }\n\n        let filterFunction = (item: APILocation): boolean => {\n            if (selectedTag && !item.tags?.includes(selectedTag)) {\n                return false;\n            };\n            if (selectedCountry && item.country !== selectedCountry) {\n                return false;\n            };\n            if (\n                inputValue &&\n                item.name.indexOf(inputValue) === -1 &&\n                item.address.indexOf(inputValue) === -1 &&\n                item.description.indexOf(inputValue) === -1\n            ) {\n                return false;\n            }\n            return true;\n        }\n\n        activeLocationContext?.setActiveLocation(undefined);\n        locationsFilteredContext?.setFilteredLocations(\n            apiContext?.locations?.filter(filterFunction) || []\n        );\n    };\n\n    const handleReset = (e: SyntheticEvent<HTMLButtonElement>) => {\n        setInputValue('');\n        setSelectedTag('');\n        setSelectedCountry('gbr');\n        locationsFilteredContext?.setFilteredLocations(\n            apiContext?.locations.filter(loc => loc.country === 'gbr') || []\n        );\n    }\n\n    return (\n        <FormEle onSubmit={handleSubmit}>\n            <LabelEle>\n                <LabelTextEle\n                    className=\"label-text\"\n                >\n                    Search:\n                </LabelTextEle>\n                <InputTextEle\n                    type=\"text\"\n                    name=\"search-term\"\n                    placeholder=\"Term to search\"\n                    value={inputValue}\n                    onChange={handleTermChange}\n                />\n            </LabelEle>\n\n            <LabelEle>\n                <LabelTextEle\n                    className=\"label-text\"\n                >\n                    Category:\n                </LabelTextEle>\n                <SelectEle\n                    name=\"tag\"\n                    onChange={handleTagChange}\n                    value={selectedTag}\n                    disabled={!tags || tags.length < 1}\n                >\n                    <option>Please select:</option>\n                    {tags?.map((tag, index) => <option key={index} value={tag.id}>{tag.name}</option>)}\n                </SelectEle>\n            </LabelEle>\n\n            <LabelEle>\n                <LabelTextEle\n                    className=\"label-text\"\n                >\n                    Country:\n                </LabelTextEle>\n                <SelectEle\n                    name=\"tag\"\n                    onChange={handleCountryChange}\n                    value={selectedCountry}\n                >\n                    {countries?.map((country, index) => <option key={index} value={country.id}>{country.name}</option>)}\n                </SelectEle>\n            </LabelEle>\n\n            <BtnWrapEle>\n                <BtnEle type=\"submit\">Submit</BtnEle>\n                <BtnEle type=\"reset\" onClick={handleReset}>Reset</BtnEle>\n            </BtnWrapEle>\n        </FormEle>\n    )\n}","import styled from 'styled-components';\n\nexport const LocationEle = styled.article`\n    cursor: pointer;\n`;\n\nexport const LocationBtnWrapEle = styled.div`\n    display: flex;\n`;\n\nexport const LocationBtnEle = styled.button<{ active?: boolean }>`\n    display: block;\n    height: 1.5rem;\n    width: 1.5rem;\n    background: none;\n    border: none;\n    position: relative;\n    color: inherit;\n    cursor: pointer;\n    &:hover, &:focus{\n        color: #f2f2f2;\n    }\n    &::before{\n        content: '';\n        display: block;\n        width: 40%;\n        height: 40%;\n        position: absolute;\n        left: 50%;\n        top: 50%;\n        border-right: 2px solid currentColor;\n        border-bottom: 2px solid currentColor;\n        transition: transform 0.2s;\n        transform:  ${props => props.active ?\n        'translate(-50%, -50%) rotate(45deg)' :\n        'translate(-50%, -50%) rotate(-45deg)'\n    };\n    }\n`;\n\nexport const LocationTitleEle = styled.h1`\n    display: block;\n    width: 100%;\n    white-space: nowrap;\n    text-overflow: ellipsis;\n    overflow: hidden;\n    font-size: 100%;\n    margin: 0 ;\n`;\n\nexport const LocationDetailsEle = styled.div`\n    cursor: default;\n    display: flex;\n    align-items: flex-start;\n    font-size: 75%;\n    gap: .5em;\n    margin-top: 1em;\n`;\n\nexport const LocationAddressEle = styled.address`\n    white-space: pre;\n`;\n\nexport const LocationDetailsPartEle = styled.div`\n    display: block;\n    flex: 1 1 50%;    \n    color: #fff;\n`;\n\nexport const LocationDetailsTitleEle = styled.h2`\n    font-size: calc(12 / 18 * 100%);\n    text-transform: uppercase;\n    font-weight: 400;\n    margin: 0 0 0.25em;\n    text-decoration: underline;\n`;\n\nexport const TagsEle = styled.div`\n    display: flex;\n    gap: 0.25em;\n`;\n\nexport const TagEle = styled.span`\n    font-size: 50%;\n    border-radius: 2px;\n    border: 1px solid currentColor;\n    padding: 0.2em 0.5em;\n    font-weight: 400;\n`;","import { FunctionComponent, useContext } from 'react';\nimport { APIContext, APILocation } from '../../context';\n\nimport { LocationBtnWrapEle, LocationBtnEle, LocationEle, LocationTitleEle, LocationDetailsEle, LocationAddressEle, LocationDetailsPartEle, LocationDetailsTitleEle, TagsEle, TagEle } from './LocationsListItem.styles';\n\ninterface LocationsListItemProps {\n    location: APILocation;\n    setActive: () => void;\n    isActive: boolean;\n}\nexport const LocationsListItem: FunctionComponent<LocationsListItemProps> = ({ location, setActive, isActive }) => {\n\n    const apiContext = useContext(APIContext);\n\n    const { name, description, address, tags } = location;\n\n    const mappedTags = tags && apiContext?.tags && tags?.map((tag) => apiContext.tags.find(item => item.id === tag)?.name);\n\n    return (\n        <LocationEle onClick={setActive}>\n            <LocationBtnWrapEle>\n                <LocationTitleEle>{name}</LocationTitleEle>\n                <LocationBtnEle active={isActive}></LocationBtnEle>\n            </LocationBtnWrapEle>\n            { mappedTags && mappedTags.length > 0 &&\n                <TagsEle>\n                    {mappedTags.map((tag, index) => <TagEle key={index}>{tag}</TagEle>)}\n                </TagsEle>\n            }\n            {isActive &&\n                <LocationDetailsEle onClick={event => event.stopPropagation()}>\n                    <LocationDetailsPartEle>\n                        <LocationDetailsTitleEle>Description</LocationDetailsTitleEle>\n                        {description}\n                    </LocationDetailsPartEle>\n                    {address && address !== 'redacted' &&\n                        <LocationDetailsPartEle>\n                            <LocationDetailsTitleEle>Address</LocationDetailsTitleEle>\n                            <LocationAddressEle>{address}</LocationAddressEle>\n                        </LocationDetailsPartEle>\n                    }\n                </LocationDetailsEle>}\n        </LocationEle>\n    );\n}","import styled from 'styled-components';\n\nexport const LocationsListWrapEle = styled.ul`\n    overflow-y: auto;\n    padding: 0;\n    margin: 0;\n    border-top: .2em solid #38414e;\n`;\n\nexport const LocationsListEle = styled.ul`\n    list-style: none;\n    padding: 0;\n`;\n\nexport const LocationsListItemEle = styled.li`\n    display: block;\n    margin: 1em 0;\n    border-left: .2em solid currentColor;\n    padding: 0 .5em 0 .3em;\n`;\n","import { FunctionComponent, useContext } from 'react';\nimport { ActiveLocationContext, APILocation, LocationsFilteredContext } from '../../context';\nimport { LocationsListItem } from '../LocationsListItem';\n\nimport { LocationsListWrapEle, LocationsListItemEle, LocationsListEle } from './LocationsList.styles';\n\nexport const LocationsList: FunctionComponent<{}> = () => {\n    const { filteredLocations } = useContext(LocationsFilteredContext) || {};\n    const { activeLocation, setActiveLocation } = useContext(ActiveLocationContext) || {};\n\n    const setActive = (active: string) => {\n        if (!active || !setActiveLocation) {\n            return;\n        }\n        setActiveLocation(active === activeLocation ? undefined : active);\n    }\n\n    return (\n        <LocationsListWrapEle>\n            <LocationsListEle>\n                {filteredLocations?.map((location: APILocation) => (\n                    <LocationsListItemEle key={location.id}>\n                        <LocationsListItem isActive={location.id === activeLocation} setActive={() => setActive(location.id)} location={location} />\n                    </LocationsListItemEle>\n                ))}\n            </LocationsListEle>\n        </LocationsListWrapEle>\n    )\n}","import styled from 'styled-components';\n\nexport const MapContainer = styled.div`\n    display: block;\n    height calc(100vw * (2 / 3));\n    margin: 1em 0 0;\n    @media screen and (min-width: 900px) {\n        margin: 0;\n        height: 100%;\n        grid-row: 1 / 3;\n        grid-column: 2;\n    }\n`;","import { FunctionComponent, useState, useRef, useEffect, useContext } from \"react\";\nimport { GoogleMapsContext, LocationsFilteredContext } from \"../../context\";\nimport { ActiveLocationContext } from \"../../context\";\n\nimport { MapContainer } from './Map.styles';\n\nexport const Map: FunctionComponent<{}> = () => {\n\n    const googleMapsContext = useContext(GoogleMapsContext);\n    const { filteredLocations } = useContext(LocationsFilteredContext) || {};\n    const { activeLocation, setActiveLocation } = useContext(ActiveLocationContext) || {};\n\n    const [map, setMap] = useState<google.maps.Map | undefined>(undefined);\n    const [markers, setMarkers] = useState<google.maps.Marker[] | undefined>(undefined);\n\n    const mapRef = useRef<HTMLDivElement>(null);\n\n    useEffect(() => {\n        if (!mapRef.current || !googleMapsContext?.loaded) {\n            return;\n        }\n        setMap(new google.maps.Map(mapRef.current, {\n            mapId: process.env.REACT_APP_MAP_ID,\n            center: { lat: -33, lng: 151 },\n            zoom: 8,\n            zoomControl: false,\n        } as google.maps.MapOptions));\n    }, [googleMapsContext, mapRef, setMap])\n\n    useEffect(() => {\n        if (!map) {\n            return;\n        }\n        if (markers && filteredLocations && markers.length === filteredLocations.length) {\n            return;\n        }\n\n        markers?.forEach(marker => {\n            marker.setMap(null);\n        });\n\n        const newMarkers = filteredLocations?.map((location) => {\n            const { lat, lng } = location;\n            return new google.maps.Marker({\n                position: {\n                    lat, lng\n                },\n                map,\n            });\n        });\n\n        setMarkers(newMarkers);\n    }, [map, filteredLocations, setMarkers, markers]);\n\n\n    useEffect(() => {\n        if (!markers || !map || !setActiveLocation || !filteredLocations) {\n            return\n        }\n\n        const bounds = new google.maps.LatLngBounds();\n\n        if (markers?.length > 0) {\n            markers.forEach(marker => {\n                const position = marker.getPosition();\n                if (!position) {\n                    return;\n                }\n                bounds.extend(position);\n            });\n            map.fitBounds(bounds);\n            map.setZoom(Math.min(map.getZoom() - 1, 15));\n        } else {\n            map.setZoom(8);\n            map.panTo({\n                lat: 51.51403184993422,\n                lng: -0.1270110922311092\n            });\n        }\n\n        markers.forEach((marker, index) => {\n            marker.addListener('click', (e) => {\n                if (filteredLocations) {\n                    console.log(filteredLocations[index]);\n                };\n                setActiveLocation && setActiveLocation(filteredLocations[index].id);\n            })\n        });\n\n        return () => {\n            markers?.forEach((marker) => {\n                google.maps.event.clearInstanceListeners(marker);\n            });\n        };\n    }, [map, markers, filteredLocations, setActiveLocation]);\n\n\n    useEffect(() => {\n        if (!filteredLocations || !map || typeof activeLocation === 'undefined' || !markers) {\n            return;\n        }\n\n        const index = filteredLocations.findIndex(location => location.id === activeLocation);\n\n        if (typeof index === 'undefined') {\n            return;\n        }\n\n        const marker = markers[index];\n        const position = marker.getPosition() as google.maps.LatLng;\n\n        if (position) {\n            map.panTo(position);\n            if (map.getZoom() < 12) {\n                map.setZoom(12)\n            }\n        }\n\n    }, [map, activeLocation, markers, filteredLocations]);\n\n    return <MapContainer ref={mapRef} />;\n}\n\n","import { FunctionComponent } from 'react';\nimport { StoreFinderContainer } from './App.styles';\n\nimport { SearchForm } from '../SearchForm';\nimport { LocationsList } from '../LocationsList';\nimport { Map } from '../Map';\n\nimport { CombinedProviders } from '../../context';\n\nexport const App: FunctionComponent<unknown> = () => {\n  return (\n    <div id=\"store-finder-app\">\n      <CombinedProviders>\n        <StoreFinderContainer>\n          <SearchForm />\n          <Map />\n          <LocationsList />\n        </StoreFinderContainer>\n      </CombinedProviders>\n    </div>\n  );\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport { App } from \"./components/App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}